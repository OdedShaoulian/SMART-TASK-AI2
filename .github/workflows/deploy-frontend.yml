name: Deploy Frontend to Azure

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

# Prevent overlapping deployments
concurrency:
  group: frontend-deploy-${{ github.ref }}
  cancel-in-progress: true

jobs:
  deploy:
    name: Deploy to Azure Static Web Apps
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: Install client dependencies
      working-directory: ./client
      run: npm ci

    - name: Build client
      working-directory: ./client
      run: npm run build
      env:
        # Use staging API URL for PRs, production for main
        VITE_API_URL: ${{ github.ref == 'refs/heads/main' && secrets.PRODUCTION_API_URL || secrets.STAGING_API_URL }}

    - name: Deploy to Azure Static Web Apps
      uses: Azure/static-web-apps-deploy@v1
      with:
        azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        app_location: "/client"
        api_location: ""
        output_location: "dist"
        skip_app_build: true

    - name: Get deployment URL
      id: deployment_url
      run: |
        if [ "${{ github.ref }}" = "refs/heads/main" ]; then
          echo "url=https://${{ secrets.AZURE_STATIC_WEB_APP_NAME }}.azurestaticapps.net" >> $GITHUB_OUTPUT
        else
          # For PRs, we'll construct the preview URL
          echo "url=https://${{ secrets.AZURE_STATIC_WEB_APP_NAME }}.azurestaticapps.net" >> $GITHUB_OUTPUT
        fi

    - name: Comment PR with preview URL
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const deploymentUrl = '${{ steps.deployment_url.outputs.url }}';
          const comment = `🚀 **Preview deployment ready!**
          
          **Preview URL:** ${deploymentUrl}
          
          This preview will be automatically updated with each push to this PR.
          
          ---
          *Deployed by GitHub Actions*`;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });

    - name: Notify deployment success
      if: success()
      run: |
        if [ "${{ github.ref }}" = "refs/heads/main" ]; then
          echo "🎉 Frontend successfully deployed to production!"
          echo "Production URL: ${{ steps.deployment_url.outputs.url }}"
        else
          echo "🎉 Frontend preview deployed!"
          echo "Preview URL: ${{ steps.deployment_url.outputs.url }}"
        fi

    - name: Notify deployment failure
      if: failure()
      run: |
        echo "❌ Frontend deployment failed!"
        echo "Check the logs above for details."
