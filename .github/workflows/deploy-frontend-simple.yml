name: Deploy Frontend to Azure (Simple)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

# Prevent overlapping deployments
concurrency:
  group: frontend-deploy-simple-${{ github.ref }}
  cancel-in-progress: true

jobs:
  deploy:
    name: Deploy to Azure Storage Static Website
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: Install client dependencies
      working-directory: ./client
      run: npm ci

    - name: Build client
      working-directory: ./client
      run: npm run build
      env:
        # Use staging API URL for PRs, production for main
        VITE_API_URL: ${{ github.ref == 'refs/heads/main' && secrets.PRODUCTION_API_URL || secrets.STAGING_API_URL }}

    - name: Login to Azure
      uses: azure/login@v2
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Deploy to Azure Storage Account
      run: |
        # Get storage account name from secrets
        STORAGE_ACCOUNT_NAME="${{ secrets.AZURE_STORAGE_ACCOUNT_NAME }}"
        CONTAINER_NAME="${{ github.ref == 'refs/heads/main' && 'production' || 'preview' }}"
        
        # Create container if it doesn't exist
        az storage container create \
          --account-name $STORAGE_ACCOUNT_NAME \
          --name $CONTAINER_NAME \
          --public-access blob \
          --fail-on-exist false
        
        # Upload build files
        az storage blob upload-batch \
          --account-name $STORAGE_ACCOUNT_NAME \
          --source ./client/dist \
          --destination $CONTAINER_NAME \
          --overwrite
        
        # Set index.html as default document
        az storage blob service-properties update \
          --account-name $STORAGE_ACCOUNT_NAME \
          --static-website \
          --index-document index.html \
          --404-document index.html

    - name: Get deployment URL
      id: deployment_url
      run: |
        STORAGE_ACCOUNT_NAME="${{ secrets.AZURE_STORAGE_ACCOUNT_NAME }}"
        CONTAINER_NAME="${{ github.ref == 'refs/heads/main' && 'production' || 'preview' }}"
        
        if [ "${{ github.ref }}" = "refs/heads/main" ]; then
          # Production URL
          echo "url=https://$STORAGE_ACCOUNT_NAME.z13.web.core.windows.net" >> $GITHUB_OUTPUT
        else
          # Preview URL (using container name)
          echo "url=https://$STORAGE_ACCOUNT_NAME.z13.web.core.windows.net/$CONTAINER_NAME" >> $GITHUB_OUTPUT
        fi

    - name: Comment PR with preview URL
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const deploymentUrl = '${{ steps.deployment_url.outputs.url }}';
          const comment = `🚀 **Preview deployment ready!**
          
          **Preview URL:** ${deploymentUrl}
          
          This preview will be automatically updated with each push to this PR.
          
          ---
          *Deployed by GitHub Actions*`;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });

    - name: Notify deployment success
      if: success()
      run: |
        if [ "${{ github.ref }}" = "refs/heads/main" ]; then
          echo "🎉 Frontend successfully deployed to production!"
          echo "Production URL: ${{ steps.deployment_url.outputs.url }}"
        else
          echo "🎉 Frontend preview deployed!"
          echo "Preview URL: ${{ steps.deployment_url.outputs.url }}"
        fi

    - name: Notify deployment failure
      if: failure()
      run: |
        echo "❌ Frontend deployment failed!"
        echo "Check the logs above for details."
