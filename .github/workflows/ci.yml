name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: |
        npm ci
        cd server && npm ci
        cd ../client && npm ci

    - name: Run server tests
      run: |
        cd server
        npm test
      env:
        JWT_SECRET: test-jwt-secret
        COOKIE_SECRET: test-cookie-secret
        CSRF_SECRET: test-csrf-secret
        CORS_ORIGIN: http://localhost:5173
        DATABASE_URL: file:./test.db
        JWT_ALGORITHM: HS512
        JWT_ACCESS_TOKEN_EXPIRY: 10m
        JWT_REFRESH_TOKEN_EXPIRY: 7d

    - name: Run client tests
      run: |
        cd client
        npm test -- --run

    - name: Run client E2E tests
      run: |
        cd client
        npx playwright install chromium
        npm run test:e2e
      env:
        CI: true

  build:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: Install dependencies
      run: |
        npm ci
        cd server && npm ci
        cd ../client && npm ci

    - name: Build server
      run: |
        cd server
        npm run build
      env:
        JWT_SECRET: build-jwt-secret
        COOKIE_SECRET: build-cookie-secret
        CSRF_SECRET: build-csrf-secret
        CORS_ORIGIN: http://localhost:5173
        DATABASE_URL: file:./build.db
        JWT_ALGORITHM: HS512
        JWT_ACCESS_TOKEN_EXPIRY: 10m
        JWT_REFRESH_TOKEN_EXPIRY: 7d

    - name: Build client
      run: |
        cd client
        npm run build

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-artifacts
        path: |
          server/dist/
          client/dist/
        retention-days: 7

  security:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: Install dependencies
      run: |
        npm ci
        cd server && npm ci
        cd ../client && npm ci

    - name: Run security audit
      run: |
        npm audit --audit-level=moderate
        cd server && npm audit --audit-level=moderate
        cd ../client && npm audit --audit-level=moderate
